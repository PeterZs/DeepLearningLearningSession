name: "VGG_ILSVRC_16_layer_differentiator"

layer {
  name: "data_pair"
    type: "MultiImageData"
    top: "data_pair"
    top: "label"
    multi_image_data_param {
    source: "/home/chenliu/Projects/DeepLearningToyExamples/DayAndNight/Data/train.txt"
      batch_size: 1
      shuffle: false
      num_images: 2
      new_width: 32
      new_height: 32
      }
}

layer {
  name: "slice"
    type: "Slice"
    bottom: "data_pair"
    top: "data"
    top: "data_p"
    slice_param {
    axis: 1
      slice_point: 3
      }
}

layer {
  bottom: "data"
    top: "conv1_1"
    name: "conv1_1"
    type: "Convolution"
    param {    
    name: "conv1_1_w"
    lr_mult: 0
      }
  param {
    name: "conv1_1_b"
        lr_mult: 0
      }
    convolution_param {
      num_output: 64
      pad: 1
      kernel_size: 3
      }
}
layer {
  bottom: "conv1_1"
    top: "conv1_1"
    name: "relu1_1"
    type: "ReLU"
    }
layer {
  bottom: "conv1_1"
    top: "conv1_2"
    name: "conv1_2"
    type: "Convolution"
    param {
    name: "conv1_2_w"
        lr_mult: 0
      }
  param {
    name: "conv1_2_"
        lr_mult: 0
      }
    convolution_param {
      num_output: 64
      pad: 1
      kernel_size: 3
      }
}
layer {
  bottom: "conv1_2"
    top: "conv1_2"
    name: "relu1_2"
    type: "ReLU"
    }
layer {
  bottom: "conv1_2"
    top: "pool1"
    name: "pool1"
    type: "Pooling"
    pooling_param {
    pool: MAX
      kernel_size: 2
      stride: 2
      }
}
layer {
  bottom: "pool1"
    top: "conv2_1"
    name: "conv2_1"
    type: "Convolution"
    param {
    name: "conv2_1_w"
        lr_mult: 0
      }
  param {
    name: "conv2_1_b"
        lr_mult: 0
      }
    convolution_param {
    num_output: 128
      pad: 1
      kernel_size: 3
      }
}
layer {
  bottom: "conv2_1"
    top: "conv2_1"
    name: "relu2_1"
    type: "ReLU"
    }
layer {
  bottom: "conv2_1"
    top: "conv2_2"
    name: "conv2_2"
    type: "Convolution"
    param {
    name: "conv2_2_w"
        lr_mult: 0
      }
  param {
    name: "conv2_2_b"
        lr_mult: 0
      }
    convolution_param {
    num_output: 128
      pad: 1
      kernel_size: 3
      }
}
layer {
  bottom: "conv2_2"
    top: "conv2_2"
    name: "relu2_2"
    type: "ReLU"
    }
layer {
  bottom: "conv2_2"
    top: "pool2"
    name: "pool2"
    type: "Pooling"
    pooling_param {
    pool: MAX
      kernel_size: 2
      stride: 2
      }
}
layer {
  bottom: "pool2"
    top: "conv3_1"
    name: "conv3_1"
    type: "Convolution"
    param {
    name: "conv3_1_w"
        lr_mult: 0
      }
  param {
    name: "conv3_1_b"
        lr_mult: 0
      }
    convolution_param {
    num_output: 256
      pad: 1
      kernel_size: 3
      }
}
layer {
  bottom: "conv3_1"
    top: "conv3_1"
    name: "relu3_1"
    type: "ReLU"
    }
layer {
  bottom: "conv3_1"
    top: "conv3_2"
    name: "conv3_2"
    type: "Convolution"
    param {
    name: "conv3_2_w"
        lr_mult: 0
      }
  param {
    name: "conv3_2_b"
        lr_mult: 0
      }
    convolution_param {
    num_output: 256
      pad: 1
      kernel_size: 3
      }
}
layer {
  bottom: "conv3_2"
    top: "conv3_2"
    name: "relu3_2"
    type: "ReLU"
    }
layer {
  bottom: "conv3_2"
    top: "conv3_3"
    name: "conv3_3"
    type: "Convolution"
    param {
    name: "conv3_3_w"
        lr_mult: 0
      }
  param {
    name: "conv3_3_b"
        lr_mult: 0
      }
    convolution_param {
    num_output: 256
      pad: 1
      kernel_size: 3
      }
}
layer {
  bottom: "conv3_3"
    top: "conv3_3"
    name: "relu3_3"
    type: "ReLU"
    }
layer {
  bottom: "conv3_3"
    top: "pool3"
    name: "pool3"
    type: "Pooling"
    pooling_param {
    pool: MAX
      kernel_size: 2
      stride: 2
      }
}

layer {
  bottom: "pool3"
    top: "fc6"
    name: "fc6_differentiator"
    type: "InnerProduct"
    param {
    name: "fc6_w"
        lr_mult: 100
      }
  param {
    name: "fc6_b"
        lr_mult: 100
      }
    inner_product_param {
    num_output: 4096
      }
}
layer {
  bottom: "fc6"
    top: "fc6"
    name: "relu6"
    type: "ReLU"
    }
layer {
  bottom: "fc6"
    top: "fc6"
    name: "drop6"
    type: "Dropout"
    dropout_param {
    dropout_ratio: 0.5
      }
}
layer {
  bottom: "fc6"
    top: "fc7"
    name: "fc7_differentiator"
    type: "InnerProduct"
    param {
    name: "fc7_w"
        lr_mult: 100
      }
  param {
    name: "fc7_b"
        lr_mult: 100
      }
    inner_product_param {
    num_output: 4096
      }
}
layer {
  bottom: "fc7"
    top: "fc7"
    name: "relu7"
    type: "ReLU"
    }
layer {
  bottom: "fc7"
    top: "fc7"
    name: "drop7"
    type: "Dropout"
    dropout_param {
    dropout_ratio: 0.5
      }
}

layer {
  bottom: "fc7"
    top: "fc8"
    name: "fc8_differentiator"
    type: "InnerProduct"
    param {
        lr_mult: 100
    }
    param {
        lr_mult: 100
	}
    inner_product_param {
    num_output: 2
      }
}


layer {
  bottom: "data_p"
    top: "conv1_1_p"
    name: "conv1_1_p"
    type: "Convolution"
    param {
    name: "conv1_1_w"
        lr_mult: 0
      }
  param {
    name: "conv1_1_b"
        lr_mult: 0
      }
    convolution_param {
      num_output: 64
      pad: 1
      kernel_size: 3
      }
}
layer {
  bottom: "conv1_1_p"
    top: "conv1_1_p"
    name: "relu1_1_p"
    type: "ReLU"
    }
layer {
  bottom: "conv1_1_p"
    top: "conv1_2_p"
    name: "conv1_2_p"
    type: "Convolution"
    param {
    name: "conv1_2_w"
        lr_mult: 0
      }
  param {
    name: "conv1_2_b"
        lr_mult: 0
      }
    convolution_param {
      num_output: 64
      pad: 1
      kernel_size: 3
      }
}
layer {
  bottom: "conv1_2_p"
    top: "conv1_2_p"
    name: "relu1_2_p"
    type: "ReLU"
    }
layer {
  bottom: "conv1_2_p"
    top: "pool1_p"
    name: "pool1_p"
    type: "Pooling"
    pooling_param {
    pool: MAX
      kernel_size: 2
      stride: 2
      }
}
layer {
  bottom: "pool1_p"
    top: "conv2_1_p"
    name: "conv2_1_p"
    type: "Convolution"
    param {
    name: "conv2_1_w"
        lr_mult: 0
      }
  param {
    name: "conv2_1_b"
        lr_mult: 0
      }
    convolution_param {
      num_output: 128
      pad: 1
      kernel_size: 3
      }
}
layer {
  bottom: "conv2_1_p"
    top: "conv2_1_p"
    name: "relu2_1_p"
    type: "ReLU"
    }
layer {
  bottom: "conv2_1_p"
    top: "conv2_2_p"
    name: "conv2_2_p"
    type: "Convolution"
    param {
    name: "conv2_2_w"
        lr_mult: 0
      }
  param {
    name: "conv2_2_b"
        lr_mult: 0
      }
    convolution_param {
      num_output: 128
      pad: 1
      kernel_size: 3
      }
}
layer {
  bottom: "conv2_2_p"
    top: "conv2_2_p"
    name: "relu2_2_p"
    type: "ReLU"
    }
layer {
  bottom: "conv2_2_p"
    top: "pool2_p"
    name: "pool2_p"
    type: "Pooling"
    pooling_param {
    pool: MAX
      kernel_size: 2
      stride: 2
      }
}
layer {
  bottom: "pool2_p"
    top: "conv3_1_p"
    name: "conv3_1_p"
    type: "Convolution"
    param {
    name: "conv3_1_w"
        lr_mult: 0
      }
  param {
    name: "conv3_1_b"
        lr_mult: 0
      }
    convolution_param {
      num_output: 256
      pad: 1
      kernel_size: 3
      }
}
layer {
  bottom: "conv3_1_p"
    top: "conv3_1_p"
    name: "relu3_1_p"
    type: "ReLU"
    }
layer {
  bottom: "conv3_1_p"
    top: "conv3_2_p"
    name: "conv3_2_p"
    type: "Convolution"
    param {
    name: "conv3_2_w"
        lr_mult: 0
      }
  param {
    name: "conv3_2_b"
        lr_mult: 0
      }
    convolution_param {
      num_output: 256
      pad: 1
      kernel_size: 3
      }
}
layer {
  bottom: "conv3_2_p"
    top: "conv3_2_p"
    name: "relu3_2_p"
    type: "ReLU"
    }
layer {
  bottom: "conv3_2_p"
    top: "conv3_3_p"
    name: "conv3_3_p"
    type: "Convolution"
    param {
    name: "conv3_3_w"
        lr_mult: 0
      }
  param {
    name: "conv3_3_b"
        lr_mult: 0
      }
    convolution_param {
      num_output: 256
      pad: 1
      kernel_size: 3
      }
}
layer {
  bottom: "conv3_3_p"
    top: "conv3_3_p"
    name: "relu3_3_p"
    type: "ReLU"
    }
layer {
  bottom: "conv3_3_p"
    top: "pool3_p"
    name: "pool3_p"
    type: "Pooling"
    pooling_param {
    pool: MAX
      kernel_size: 2
      stride: 2
      }
}

layer {
  bottom: "pool3_p"
    top: "fc6_p"
    name: "fc6_p_differentiator"
    type: "InnerProduct"
    param {
    name: "fc6_w"
        lr_mult: 100
      }
  param {
    name: "fc6_b"
        lr_mult: 100
      }
  inner_product_param {
    num_output: 4096
      }
}
layer {
  bottom: "fc6_p"
    top: "fc6_p"
    name: "relu6_p"
    type: "ReLU"
    }
layer {
  bottom: "fc6_p"
    top: "fc6_p"
    name: "drop6_p"
    type: "Dropout"
    dropout_param {
    dropout_ratio: 0.5
      }
}
layer {
  bottom: "fc6_p"
    top: "fc7_p"
    name: "fc7_p_differentiator"
    type: "InnerProduct"
    param {
    name: "fc7_w"
        lr_mult: 100
      }
  param {
    name: "fc7_b"
        lr_mult: 100
      }
  inner_product_param {
    num_output: 4096
      }
}
layer {
  bottom: "fc7_p"
    top: "fc7_p"
    name: "relu7_p"
    type: "ReLU"
    }
layer {
  bottom: "fc7_p"
    top: "fc7_p"
    name: "drop7_p"
    type: "Dropout"
    dropout_param {
    dropout_ratio: 0.5
      }
}

layer {
  bottom: "fc7_p"
    top: "fc8_p"
    name: "fc8_p_differentiator"
    type: "InnerProduct"
    param {
        lr_mult: 100
    }
    param {
        lr_mult: 100
	}
    inner_product_param {
    num_output: 2
      }
}


layer {
  name: "loss"
  type: "ContrastiveLoss"
  bottom: "fc8"
  bottom: "fc8_p"
  bottom: "label"
  top: "loss"
  contrastive_loss_param {
    margin: 1
  }
}
